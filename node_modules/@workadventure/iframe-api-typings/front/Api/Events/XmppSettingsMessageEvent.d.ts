import { z } from "zod";
export declare const isXmppSettingsMessageEvent: z.ZodObject<{
    jid: z.ZodString;
    conferenceDomain: z.ZodString;
    rooms: z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        url: z.ZodString;
        type: z.ZodString;
        subscribe: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    }, "strip", z.ZodTypeAny, {
        type: string;
        name: string;
        url: string;
        subscribe: boolean;
    }, {
        subscribe?: boolean | undefined;
        type: string;
        name: string;
        url: string;
    }>, "many">;
    jabberId: z.ZodString;
    jabberPassword: z.ZodString;
}, "strip", z.ZodTypeAny, {
    jid: string;
    conferenceDomain: string;
    rooms: {
        type: string;
        name: string;
        url: string;
        subscribe: boolean;
    }[];
    jabberId: string;
    jabberPassword: string;
}, {
    jid: string;
    conferenceDomain: string;
    rooms: {
        subscribe?: boolean | undefined;
        type: string;
        name: string;
        url: string;
    }[];
    jabberId: string;
    jabberPassword: string;
}>;
export type XmppSettingsMessageEvent = z.infer<typeof isXmppSettingsMessageEvent>;
